import random
from collections import Counter
from Bio import SeqIO
from tnseq import sequence
from tnseq import tnseq
from tnseq import extract_barcodes
from tnseq import quantify_barcodes

def write_100_random_seqs_to_file(input_file, output_file):
    # Somewhat random
    seqs = sequence.stream_fa(input_file)
    cnt = 0
    with open(output_file, 'w') as fh:
        while cnt < 100:
            seq = next(seqs)
            rnum = random.uniform(0, 1)
            if rnum < 0.25:
                fh.write(f'>{seq.header}\n{seq.sequence}\n')
                cnt += 1


def test_extract_barcode_host1():

    in_r1_file = "/nfs/home/ansintsova/TNSEQ_DEV/code/package/tests/data/seqData/test.fasta"
    tnSeq = 'GTGTATAAGAGACAG'
    r = list(sequence.stream_fa(in_r1_file))[0]
    expectedBarcode = 'TGTTTTGGTAACGCTGC'
    expectedHost = 'AGGCAGGCCCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAG'
    outBarcode, outHost = extract_barcodes.extract_barcode_host(r, tnSeq)
    assert outBarcode == expectedBarcode
    assert outHost == expectedHost


def test_barcode_extraction_map100():
    in_r1_file = "/nfs/home/ansintsova/TNSEQ_DEV/code/package/tests/data/seqData/test100.fasta"
    r = sequence.stream_fa(in_r1_file)
    tnSeq = 'GTGTATAAGAGACAG'
    barcodes = []
    hosts = []
    for seq in r:
        barcode, host = extract_barcodes.extract_barcode_host(seq, tnSeq)
        barcodes.append(barcode)
        hosts.append(host)
    expectedBarcodes = ['GTCACGCGCCCGCGCCA', 'AGACCGATGCGTCAAGG', 'GAAAGCCCGAGATCGAT', 'TCGCCGAGCGATTTTTA',
                        'AGGAAACCAAATATAAA', 'TGCAAAGTGAGGGCTAC', 'AGAGCACACGACCGGTG', 'TACATCGCTAGTGAACT',
                        'GTGCGCTATGCAACGAC', 'TGGCACGAAAGCAAGAT', 'CTGCATATCTAGCGCGG', 'CCAAGAGCACGAGACCA',
                        'GCGGTTCGGAGAGACAG', 'ACGGATCCGACCCGGGG', 'TGGAAACCCTATCGCTA', 'AGATGCTCGCGTGCGGT',
                        'CACATTGGAGTCTACTG', 'CGCAATGGGGCGTGGGG', 'CTCCCAGCTTATCAGAG', 'GACCAATACGCGGGGAG',
                        'ATTGTTCTATGCCTGCC', 'CCGTCTGGCTGAGACTG', 'TCATTAAAGGCTTGGTG', 'ATAAGCTTTAATAGTTA',
                        'AGGAGTAGCCGAGTGCT', 'AGTATGCAGACATGTGT', 'TAAGGACGCTACCGTAC', 'GCAAAGTAATCACAGAG',
                        'CAATATCATCCTCGACT', 'CCCCAAGGCTGCATCCA', 'CTTTATACGCGAACTCG', 'TCGCGCCTAGAGCTATG',
                        'GCGCACGACGGTACGCC', 'CAAAAATGATCGCGTAG', 'ACGAAGACCAGCTATGG', 'GATTTCAGACTACCTGC',
                        'GAGGGTGATTCACGACT', 'CATAAGCAGGCCAACAG', 'CGACTTGTAGATCTCTG', 'GATGGGCCTGAGGCAGA',
                        'TAATGGATGAATTTGTG', 'AGCCCAGCATACAGAGA', 'CCCCATGACAGCGTTAT', 'TTCCCAGCAAAATACGG',
                        'GCCTCCACACGAGTACA', 'CGTTATGTACATGTTCC', 'CCATCGCCTGTAACGAT', 'GTAACGCTGAACAAAAA',
                        'AAAACCTCCCTGCCCAT', 'TTGAAGACGGTACCTGT', 'CGACCATTGGTAGACAC', 'GCCGTAATCCTTAGAAG',
                        'TCAGAGCGTATTCATCC', 'TATCAGCGCGCGACTTA', 'GAATTTCAGCTGGCAAG', 'CAAACCTGATTAAATCA',
                        'CATAGCTCTTGTTACAC', 'GCGAACTTTATGGCAGA', 'ATCCATCAAGCAAACGC', 'ATTGTTCTATGCCTGCC',
                        'AGTACGGGTACAATGCG', 'CGATCACCCTCAGTATG', 'CACGTATCCTCGTGGAC', 'AGGGTACACGCAGCGCG',
                        'GAGGCCATGGGCAGTCC', 'GCGGTGACAGGATCGGA', 'CCTGAAAACCTTCACTC', 'ACGCGCCAGACTTACGC',
                        'ATGGCGCCTTCCGACGT', 'TCCTTTAGGGGCGAATG', 'AGACACTCCATTTAAAG', 'CTCCCAAACACGAGAAT',
                        'TTACGAGCTCATGAGCA', 'CGAAAAGATATACCAAT', 'GGTGGCACCTATAACAA', 'CTCAAGGCCCGACGGGC',
                        'TATTAAGGTAATGTAGA', 'TACCGTAAATGCAAATA', 'GGTGACTAGCCGGTAGT', 'CGAAAAGATATACCAAT',
                        'GCAAACTGTTACATAAG', 'CAGCCTGTCTGCGACAT', 'TAAACTACCTTTGACCA', 'TACATACTGATGCCCCT',
                        'AAGTAACCAGTCGAAGA', 'AAGTATATGGTGGTATA', 'AAGAGCCGGCACGCAAC', 'ATCCATCAAGCAAACGC',
                        'CACAAGCAGTCAAACAT', 'TCGCGATGTAATATATA', 'CGATACCCGTAACGCGT', 'ACCCGCCTGAGCTAACA',
                        'TCCAGACCTTTGCGCGA', 'CGTATGTATCGGCCAAG', 'TAGCATGGGGGGCTGAA', 'AACCTGAGAACCGCTCT',
                        'AGAATCCTCAAACTATA', 'TCGCGATGTAATATATA', 'GATAGCTTGATGACGCA', 'ATGGACTACTGCACGCG']

    expectedHosts = ['AGGCAGGCCGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCACAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCACAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCAAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCAGAGATCGGAAGAGCGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAAT', 'AGGCAGGCCCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTTTGCCTTTTTTTGCTTGAAAAAAAAAA', 'AGGCAGGCTGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCATAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAAA', 'AGGCAGGCTAAGATCGGAAGAGCGGTTCAGCAGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAAA', 'AGGCAGGCAAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCAGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCATAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCACAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCAGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCACAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCAGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGTTCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAAAA', 'AGGCAGGCAGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCACAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCAAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCACAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATTCCGTCTTTTGCTTGAAAAAAAAAA', 'AGGCAGGCCCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTTTGCTTGCAAAAAAAAA', 'AGGCAGGCAAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCATAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCAAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGAGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAAAA', 'AGGCAGGCTCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCACAGATCGGAAAGCGGTTCAGCAGGAATGCCGAGACCGATATCGTATGCCGTCTTCTGCTTGAAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTGAGATCGGAGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAATAAAAAAAAAG', 'AGGCAGGCCGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCATAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACTGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCAAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAATAAAAA', 'AGGCAGGCCCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCAGAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCACAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAACAAAA', 'AGGCAGGCATAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCTTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCCAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCATAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCGTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA', 'AGGCAGGCCAAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA']
    print(barcodes == expectedBarcodes)
    print(hosts == expectedHosts)







#test_barcode_extraction_map()
#test_quantify_load_fq_barcodes()
#test_barcode_extraction_map_100()




